package com.amadeus.drools.rule.parser;

import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;
import org.drools.compiler.builder.impl.KnowledgeBuilderImpl;
import org.drools.compiler.compiler.DialectCompiletimeRegistry;
import org.drools.compiler.compiler.DrlParser;
import org.drools.compiler.compiler.DroolsParserException;
import org.drools.compiler.lang.descr.AndDescr;
import org.drools.compiler.lang.descr.BaseDescr;
import org.drools.compiler.lang.descr.ExprConstraintDescr;
import org.drools.compiler.lang.descr.PackageDescr;
import org.drools.compiler.lang.descr.PatternDescr;
import org.drools.compiler.lang.descr.RuleDescr;
import org.drools.compiler.rule.builder.PatternBuilder;
import org.drools.compiler.rule.builder.RuleBuildContext;
import org.drools.compiler.rule.builder.dialect.mvel.MVELDialect;
import org.drools.core.definitions.InternalKnowledgePackage;
import org.drools.core.facttemplates.FactTemplate;
import org.drools.core.rule.RuleConditionElement;
import org.kie.api.KieServices;
import org.kie.api.io.KieResources;
import org.kie.api.io.Resource;
import org.kie.internal.builder.conf.LanguageLevelOption;

import com.amadeus.drools.rule.model.Constraint;
import com.amadeus.drools.rule.model.Rule;

public class RuleParser {
	private static Logger logger = Logger.getLogger(RuleParser.class);
	DrlParser dp = new DrlParser(LanguageLevelOption.DRL6);
	protected String filename;
	protected PackageDescr packageDescr = null;
	protected Rule rule = new Rule();
	RuleBuildContext context = null;

	public void setUp(String filename) {
		KieServices kieServices = KieServices.Factory.get();
		KieResources kieResources = kieServices.getResources();
		Resource resource = kieResources.newClassPathResource(filename);

		DrlParser parser = new DrlParser();
		try {
			packageDescr = parser.parse(resource);
		} catch (DroolsParserException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void parseDrlRule() {

		List<RuleDescr> rules = packageDescr.getRules();
		for (RuleDescr rule : rules) {
			if (rule.isRule()) {
				for (BaseDescr desc : rule.getLhs().getDescrs()) {
					PatternDescr p = (PatternDescr) desc;
					logger.info("id = " + p.getIdentifier() + ", ObjectType = " + p.getObjectType()
							+ ", Constraint = " + p.getConstraint().getDescrs());
				}
			}
		}
	}


}
